buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}

plugins {
    id 'org.springframework.boot' version '2.4.1' apply false
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'java'
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
//    id 'com.gorylenko.gradle-git-properties' version '2.2.0'
}


group = 'com.jojoldu.spring'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
    jcenter()
    maven { url 'https://jitpack.io' }
}

apply plugin: "io.spring.dependency-management"

dependencies {
    implementation 'org.springframework:spring-web' // For RestTemplate

    implementation('org.springframework.boot:spring-boot-starter-batch')
    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
    implementation('com.h2database:h2')
    implementation('org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4.1:1.16')
    implementation('mysql:mysql-connector-java')
    implementation 'org.mariadb.jdbc:mariadb-java-client'

    // QueryDSL
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
    implementation "com.querydsl:querydsl-apt:${queryDslVersion}"
    implementation "com.querydsl:querydsl-core:${queryDslVersion}" // 한개 더 추가!

    annotationProcessor "jakarta.persistence:jakarta.persistence-api:2.2.3"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api:1.3.5"
    implementation 'com.querydsl:querydsl-sql-spring:4.3.1'
    implementation 'joda-time:joda-time:2.10.6' // for querydsl-sql


    annotationProcessor 'org.projectlombok:lombok'
    implementation 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.projectlombok:lombok'

    testImplementation('org.springframework.boot:spring-boot-starter-test')
    testImplementation('org.springframework.batch:spring-batch-test')
}

test {
    useJUnitPlatform()
}

def generatedDir = "$buildDir/generated"
def querydslDir = "$generatedDir/querydsl"

sourceSets {
    main.java.srcDirs(querydslDir)
}

querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}

compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    querydsl.extendsFrom compileClasspath
}


dependencyManagement {
    imports {
        mavenBom org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES
    }
}
